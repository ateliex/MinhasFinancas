// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinhasFinancas.Data;

#nullable disable

namespace MinhasFinancas.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241229214927_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("MinhasFinancas.Models.CartaoCredito", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Ativa")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Banco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Paga")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CartaoCredito");
                });

            modelBuilder.Entity("MinhasFinancas.Models.Categoria", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Ativa")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = "salario",
                            Ativa = false,
                            Nome = "Salário",
                            TipoId = 0
                        },
                        new
                        {
                            Id = "compras",
                            Ativa = false,
                            Nome = "Compras",
                            TipoId = 1
                        },
                        new
                        {
                            Id = "mercado",
                            Ativa = false,
                            Nome = "Mercado",
                            TipoId = 1
                        },
                        new
                        {
                            Id = "lanches",
                            Ativa = false,
                            Nome = "Lanches",
                            TipoId = 1
                        });
                });

            modelBuilder.Entity("MinhasFinancas.Models.Conta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Ativa")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Banco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Paga")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("TEXT");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("MinhasFinancas.Models.Financa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CartaoCreditoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CategoriaId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ContaId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Paga")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CartaoCreditoId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ContaId");

                    b.ToTable("Financas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6cd6a787-cc87-4c17-8c75-b18ebc4bf901"),
                            CategoriaId = "salario",
                            Data = new DateTime(2024, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Salário",
                            Paga = false,
                            TipoId = 0,
                            Valor = 3000.00m
                        },
                        new
                        {
                            Id = new Guid("6cd6a787-cc87-4c17-8c75-b18ebc4bf902"),
                            CategoriaId = "mercado",
                            Data = new DateTime(2024, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Atacadão",
                            Paga = false,
                            TipoId = 1,
                            Valor = 30.00m
                        },
                        new
                        {
                            Id = new Guid("6cd6a787-cc87-4c17-8c75-b18ebc4bf903"),
                            CategoriaId = "lanches",
                            Data = new DateTime(2024, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Mc Donalds",
                            Paga = false,
                            TipoId = 1,
                            Valor = 45.00m
                        });
                });

            modelBuilder.Entity("MinhasFinancas.Models.Saldo", b =>
                {
                    b.Property<Guid>("CartaoId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("CartaoId", "Data");

                    b.ToTable("Saldo");
                });

            modelBuilder.Entity("MinhasFinancas.Models.Financa", b =>
                {
                    b.HasOne("MinhasFinancas.Models.CartaoCredito", null)
                        .WithMany("Financas")
                        .HasForeignKey("CartaoCreditoId");

                    b.HasOne("MinhasFinancas.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinhasFinancas.Models.Conta", "Conta")
                        .WithMany("Financas")
                        .HasForeignKey("ContaId");

                    b.Navigation("Categoria");

                    b.Navigation("Conta");
                });

            modelBuilder.Entity("MinhasFinancas.Models.Saldo", b =>
                {
                    b.HasOne("MinhasFinancas.Models.CartaoCredito", "Cartao")
                        .WithMany("Saldos")
                        .HasForeignKey("CartaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cartao");
                });

            modelBuilder.Entity("MinhasFinancas.Models.CartaoCredito", b =>
                {
                    b.Navigation("Financas");

                    b.Navigation("Saldos");
                });

            modelBuilder.Entity("MinhasFinancas.Models.Conta", b =>
                {
                    b.Navigation("Financas");
                });
#pragma warning restore 612, 618
        }
    }
}
