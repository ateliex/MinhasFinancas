// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinhasFinancas.Data;

#nullable disable

namespace MinhasFinancas.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241228173255_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("MinhasFinancas.Models.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("MinhasFinancas.Models.Conta", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Banco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Numero", "Banco", "Tipo", "Documento")
                        .IsUnique();

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("MinhasFinancas.Models.Lancamento", b =>
                {
                    b.Property<string>("ProtocoloId")
                        .HasMaxLength(24)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ContaId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("ProtocoloId");

                    b.HasIndex("ContaId");

                    b.ToTable("Lancamento", t =>
                        {
                            t.Property("ProtocoloId")
                                .HasColumnName("Lancamento_ProtocoloId");
                        });
                });

            modelBuilder.Entity("MinhasFinancas.Models.Saldo", b =>
                {
                    b.Property<Guid>("ContaId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("ContaId", "Data");

                    b.ToTable("Saldo");
                });

            modelBuilder.Entity("MinhasFinancas.Models.Lancamento", b =>
                {
                    b.HasOne("MinhasFinancas.Models.Conta", "Conta")
                        .WithMany("Lancamentos")
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("MinhasFinancas.Models.Protocolo", "Protocolo", b1 =>
                        {
                            b1.Property<string>("LancamentoProtocoloId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Id")
                                .IsRequired()
                                .HasMaxLength(24)
                                .HasColumnType("TEXT")
                                .HasColumnName("ProtocoloId");

                            b1.HasKey("LancamentoProtocoloId");

                            b1.ToTable("Lancamento");

                            b1.WithOwner()
                                .HasForeignKey("LancamentoProtocoloId");
                        });

                    b.Navigation("Conta");

                    b.Navigation("Protocolo")
                        .IsRequired();
                });

            modelBuilder.Entity("MinhasFinancas.Models.Saldo", b =>
                {
                    b.HasOne("MinhasFinancas.Models.Conta", "Conta")
                        .WithMany("Saldos")
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conta");
                });

            modelBuilder.Entity("MinhasFinancas.Models.Conta", b =>
                {
                    b.Navigation("Lancamentos");

                    b.Navigation("Saldos");
                });
#pragma warning restore 612, 618
        }
    }
}
